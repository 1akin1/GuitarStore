// <auto-generated />
using System;
using GuitarStore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GuitarStore.Migrations
{
    [DbContext(typeof(GuitarContext))]
    [Migration("20250629180411_SeedAllCategories")]
    partial class SeedAllCategories
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GuitarStore.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            Type = "Electric"
                        },
                        new
                        {
                            CategoryID = 2,
                            Type = "Acoustic"
                        },
                        new
                        {
                            CategoryID = 3,
                            Type = "Classical"
                        });
                });

            modelBuilder.Entity("GuitarStore.Models.Guitar", b =>
                {
                    b.Property<int>("GuitarID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GuitarID"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("GuitarID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Guitar", (string)null);

                    b.HasData(
                        new
                        {
                            GuitarID = 1,
                            Brand = "Fender",
                            CategoryID = 1,
                            ImageUrl = "https://commons.wikimedia.org/wiki/Category:Fender_Stratocaster#/media/File:Fender_Highway_1_Stratocaster.jpg",
                            Price = 899.99m
                        });
                });

            modelBuilder.Entity("GuitarStore.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderID"));

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("OrderID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("GuitarStore.Models.OrderedItem", b =>
                {
                    b.Property<int>("OrderedItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderedItemID"));

                    b.Property<int>("GuitarID")
                        .HasColumnType("int");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderedItemID");

                    b.HasIndex("GuitarID");

                    b.HasIndex("OrderID");

                    b.ToTable("orderedItems");
                });

            modelBuilder.Entity("GuitarStore.Models.Guitar", b =>
                {
                    b.HasOne("GuitarStore.Models.Category", "Category")
                        .WithMany("Guitars")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("GuitarStore.Models.OrderedItem", b =>
                {
                    b.HasOne("GuitarStore.Models.Guitar", "Guitar")
                        .WithMany()
                        .HasForeignKey("GuitarID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GuitarStore.Models.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guitar");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("GuitarStore.Models.Category", b =>
                {
                    b.Navigation("Guitars");
                });

            modelBuilder.Entity("GuitarStore.Models.Order", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
